/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oopproject;

import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author 20111
 */
public class NoteScreen extends javax.swing.JFrame {

    static List<Point> pointList = new ArrayList<>();
    private DrawingPanel drawingPanel;
    private boolean pointer = true;
    private List<Component> componentList = new ArrayList<>();

    /**
     * Creates new form NoteScreen
     */
    public NoteScreen(String name, String path) {
        initComponents();
        System.out.println(name);
        test(name, path);
    }

    public void test(String name, String path) {
        try (BufferedReader reader = new BufferedReader(new FileReader(path))) {
            StringBuilder text = new StringBuilder();

            String Line;
            while ((Line = reader.readLine()) != null) {
                text.append(Line).append("\n");
            }
            System.out.println(TextArea.getText());
            TextArea.append(text.toString());
            TextArea.setText(text.toString());
        } catch (IOException ex) {
            System.err.println(" cant Find File");
            ex.printStackTrace();
        }
        FileManeger fileManeger = new FileManeger();
        user u = fileManeger.CheckingSign();
        fileManeger.DESERIALIZINGPoint(name);
        setJTextAreaText(u.ContentText);
        for (Point point : pointList) {
            DrawingArea.repaint();
        }
        drawingPanel = new DrawingPanel();
        drawingPanel.setBounds(0, 0, DrawingArea.getWidth(), DrawingArea.getHeight());
        DrawingArea.add(drawingPanel);

    }

    public NoteScreen() {
        initComponents();
        FileManeger fileManeger = new FileManeger();
        user u = fileManeger.CheckingSign();
        String path = "D:\\File Maneger\\";
//        int i = 0;
//        while(!user.usersList.get(i).sign){
//            i++;
//        }
//       fileManeger.CreateFile(path, user.usersList.get(i).user_name);
//        setJTextAreaText(u.ContentText);
//        for (Point point : pointList) {
//            DrawingArea.repaint();
//        }

        drawingPanel = new DrawingPanel();
        drawingPanel.setBounds(0, 0, DrawingArea.getWidth(), DrawingArea.getHeight());
        DrawingArea.add(drawingPanel);
    }

    private class DrawingPanel extends JPanel {

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            for (int i = 1; i < pointList.size(); i++) {
                Point p1 = pointList.get(i - 1);
                Point p2 = pointList.get(i);
                g.fillRect(p1.x, p1.y, 6, 6);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SaveButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        FontBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DrawingArea = new javax.swing.JTextArea();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Write Your Note");

        SaveButton.setBackground(new java.awt.Color(0, 0, 0));
        SaveButton.setForeground(new java.awt.Color(255, 255, 255));
        SaveButton.setText("Save");
        SaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveButtonMouseClicked(evt);
            }
        });
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        TextArea.setBackground(new java.awt.Color(255, 255, 255));
        TextArea.setColumns(20);
        TextArea.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        TextArea.setLineWrap(true);
        TextArea.setRows(5);
        TextArea.setWrapStyleWord(true);
        TextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextAreaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TextArea);

        FontBox.setBackground(new java.awt.Color(255, 255, 255));
        FontBox.setForeground(new java.awt.Color(0, 0, 0));
        FontBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "12", "14", "18", "24", "36", "48" }));
        FontBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                FontBoxItemStateChanged(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Font Size");

        DrawingArea.setBackground(new java.awt.Color(255, 255, 255));
        DrawingArea.setColumns(20);
        DrawingArea.setForeground(new java.awt.Color(0, 0, 0));
        DrawingArea.setLineWrap(true);
        DrawingArea.setRows(5);
        DrawingArea.setWrapStyleWord(true);
        DrawingArea.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DrawingAreaMouseDragged(evt);
            }
        });
        jScrollPane2.setViewportView(DrawingArea);

        BackButton.setBackground(new java.awt.Color(0, 0, 0));
        BackButton.setForeground(new java.awt.Color(255, 255, 255));
        BackButton.setText("Back");
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
        });
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(BackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveButton)
                .addGap(64, 64, 64))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(756, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(FontBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FontBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(BackButton))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveButtonMouseClicked

    }//GEN-LAST:event_SaveButtonMouseClicked

    public void setJTextAreaText(String text) {
        TextArea.setText(text);
    }


    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        FileManeger fileManeger = new FileManeger();// TODO add your handling code here:
        String text = TextArea.getText();
        user u = fileManeger.CheckingSign();

        String fileName = JOptionPane.showInputDialog("Set File Name");
        if (fileName == null || fileName.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalid file name. Please enter a valid file name.");
            return;
        }
        File f9 = fileManeger.CreatePointFile("D:\\File Maneger\\", fileName);
        try (BufferedWriter write = new BufferedWriter(new FileWriter(f9))) {

            for (Point point : pointList) {
                // Convert each point to a string representation (e.g., "x,y")
                String pointString = (int) point.getX() + "," + (int) point.getY();
                // Write the point string to the file
                write.write(pointString);
                // Write a newline character to separate points (optional)
                write.newLine();
            }

        } catch (IOException ez) {
            ez.printStackTrace();
        }

        // Create text file
        File textFile = fileManeger.CreateFile("D:\\File Maneger\\", fileName);
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(textFile))) {
            // Write text to the text file
            writer.write(text);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to save text file.");
            return;
        }
        File imageFile = fileManeger.CreateFileImage("D:\\File Maneger\\", fileName);
        BufferedImage draw = new BufferedImage(DrawingArea.getWidth(), DrawingArea.getHeight(), BufferedImage.TYPE_INT_RGB);
        DrawingArea.paint(draw.getGraphics());
        int i = 0;
        while (!user.usersList.get(i).sign) {
            i++;
        }

        // Serialize the updated user list
        user.usersList.remove(i);
        fileManeger.JSONserializing(u);
        try {
            // Write the blank image to the image file
            ImageIO.write(draw, "jpg", imageFile);
            System.out.println("Image has been written to: " + imageFile.getAbsolutePath());
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to save image file.");
        }

        this.setVisible(false);
        new File_Maneger().setVisible(true);
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void TextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextAreaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextAreaKeyPressed

    private void FontBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_FontBoxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Object selectedItem = FontBox.getSelectedItem();
            int size = Integer.parseInt(selectedItem.toString());
            Font font = new Font(TextArea.getFont().getName(), Font.PLAIN, size);
            TextArea.setFont(font);
        }
    }//GEN-LAST:event_FontBoxItemStateChanged

    private void DrawingAreaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawingAreaMouseDragged
        // TODO add your handling code here:

        if (pointer) {
            DrawingArea.add(drawingPanel);
            pointList.add(evt.getPoint());
            drawingPanel.repaint();

//            Point lastPoint = pointList.get(pointList.size() - 1);
//            DrawingArea.append("X: " + lastPoint.x + ", Y: " + lastPoint.y + "\n");
        }
    }//GEN-LAST:event_DrawingAreaMouseDragged

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BackButtonMouseClicked

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new File_Maneger().setVisible(true);
        clearDrawingPanel();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void clearDrawingPanel() {
        pointList.clear();
        if (drawingPanel != null) {
            drawingPanel.repaint();
        }
    }

    private BufferedImage decodeBase64ToImage(String base64Image) {
        byte[] bytes = Base64.getDecoder().decode(base64Image);
        try (ByteArrayInputStream bais = new ByteArrayInputStream(bytes)) {
            return ImageIO.read(bais);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoteScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTextArea DrawingArea;
    private javax.swing.JComboBox<String> FontBox;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
